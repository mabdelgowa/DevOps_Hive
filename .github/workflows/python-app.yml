# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python


name: Python application

on:
  push:
    branches: [ "main" ] 
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
    
      run: |
        python -m pip install --upgrade pip
        pip install prometheus-client
        pip install flake8 pytest
        pip install fastapi
        pip install uvicorn
        pip install pytest
        pip install requests
        
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  test:
    needs: build

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      if: contains(github.event.head_commit.message, 'build')
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest prometheus-client fastapi requests httpx
    - name: Test with pytest
      run: |
        pytest ./test/unit.py
  build_image:
    needs: test
    runs-on: ubuntu-latest

    steps:
    -
        name: Set up QEMU
        if: contains(github.event.head_commit.message, 'build')
        uses: docker/setup-qemu-action@v3
    -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
        name: Build and push
        if: contains(github.event.head_commit.message, 'build')
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: mahmoudabdelgowad/devops_hive:latest  
    -
        name: Build and push for pull requests 
        if: contains(github.event.head_commit.message, 'build')
        uses: docker/build-push-action@v6
        with:
          pull_request: true
          tags: mahmoudabdelgowad/devops_hive:staging  




  terrascan_job:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    name: terrascan-action
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Run Terrascan
      id: terrascan
      uses: tenable/terrascan-action@main
      with:
        iac_type: 'k8s'
        iac_version: 'v1'
        policy_type: 'k8s'
        only_warn: false
        non_recursive: false
        sarif_upload: true
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: terrascan.sarif
        category: terrascan
  
    - name: Set foobar to cool
      uses: mikefarah/yq@master
      with:
        cmd: yq -p json -o yaml terrascan.sarif >  terrascan.yml
    - name: Handling terrascan report
      run: |
            cat terrascan.yml | grep "severity: LOW" -B 5 > terrascan_LOW.yml
            cat terrascan.yml | grep "severity: MEDIUM" -B 5 > terrascan_MEDIUM.yml 
            cat terrascan.yml | grep "severity: HIGH" -B 5 > terrascan_HIGH.yml 
            cat terrascan.yml | grep  "level: note" -B 2 -A 12 > terrascan_note.yml
            cat terrascan.yml | grep  "level: warning" -B 2 -A 12 > terrascan_warning.yml
            cat terrascan.yml | grep  "level: critical" -B 2 -A 12 > terrascan_critical.yml 
      continue-on-error: true
    - name: Send mail
      uses: dawidd6/action-send-mail@v4
      with:
        connection_url: ${{secrets.MAIL_CONNECTION}}
        # Required mail server address if not connection_url:
        server_address: smtp.gmail.com
        # Server port, default 25:
        server_port: 465
        # Optional whether this connection use TLS (default is true if server_port is 465)
        secure: true
        # Optional (recommended) mail server username:
        username: ${{secrets.MAIL_USERNAME}}
        # Optional (recommended) mail server password:
        password: ${{secrets.MAIL_PASSWORD}}
        # Required mail subject:
        subject: Github Actions job result
        # Required recipients' addresses:
        to: mabdelgowad144@gmail.com 
        # Required sender full name (address can be skipped):
        from: Mahmoud # <user@example.com>
        # Optional plain body:
        body: Build job of ${{github.repository}} completed successfully!
        # Optional converting Markdown to HTML (set content_type to text/html too):
        convert_markdown: true
        # Optional attachments:
        attachments: |
                      terrascan_MEDIUM.yml
                      terrascan_LOW.yml
                      terrascan_HIGH.yml
                      terrascan_note.yml
                      terrascan_warning.yml
                      terrascan_critical.yml
        # Optional priority: 'high', 'normal' (default) or 'low'
        priority: low

